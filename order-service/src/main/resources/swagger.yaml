openapi: 3.0.3
info:
  title: Order Management API
  description: API for managing orders including placing, retrieving, and handling order details.
  version: 1.0.0
paths:
  /orders:
    post:
      summary: Place an order
      operationId: placeOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDTO_Request'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO_Response'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    get:
      summary: Retrieve all orders
      operationId: getAllOrders
      responses:
        '200':
          description: List of all orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDTO_Response'
  /orders/{orderId}:
    get:
      summary: Retrieve order details by order ID
      operationId: getOrderDetails
      parameters:
        - name: orderId
          in: path
          required: true
          description: The ID of the order to retrieve details for.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Order details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetails'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'

components:
  schemas:
    OrderDTO_Request:
      type: object
      properties:
        productId:
          type: integer
          example: 123
        customerId:
          type: integer
          example: 456
        quantity:
          type: integer
          example: 2
      required:
        - productId
        - customerId
        - quantity

    OrderDTO_Response:
      type: object
      properties:
        amount:
          type: number
          format: float
          example: 200.50
        price:
          type: number
          format: float
          example: 100.25
        orderId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        status:
          type: string
          enum: [PENDING, SHIPPED, DELIVERED]
        productId:
          type: integer
          example: 123
        customerId:
          type: integer
          example: 456
        quantity:
          type: integer
          example: 2
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    OrderDetails:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/OrderDTO_Response'
        inventory:
          $ref: '#/components/schemas/OrderInventoryDTO'
        payment:
          $ref: '#/components/schemas/OrderPaymentDTO'
        shipping:
          $ref: '#/components/schemas/OrderShippingDTO'

    OrderInventoryDTO:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
        inventoryId:
          type: string
          format: uuid
        message:
          type: string
        status:
          type: string
          enum: [AVAILABLE, OUT_OF_STOCK]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    OrderPaymentDTO:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
        paymentId:
          type: string
          format: uuid
        message:
          type: string
        status:
          type: string
          enum: [PAID, UNPAID]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    OrderShippingDTO:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
        shippingId:
          type: string
          format: uuid
        message:
          type: string
        status:
          type: string
          enum: [PENDING, SHIPPED, DELIVERED]
        deliveryDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ProblemDetail:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
        date:
          type: string
          format: date-time
        errorCategory:
          type: string
        service:
          type: string
        httpMethod:
          type: string
      required:
        - type
        - title
        - status
