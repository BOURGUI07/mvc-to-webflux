services:
  book-postgres:
    image: "postgres:14.12"
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 500m
    networks:
      - app-network


  book-rabbitmq:
    image: rabbitmq:3.13-management
    container_name: book-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - app-network
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 500m








  catalog-service:
    image: youness544/bookstore-catalog-service
    container_name: catalog-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_URL_R2DBC=r2dbc:postgresql://book-postgres:5432/catalog_db
      - DB_URL_FLYWAY=jdbc:postgresql://book-postgres:5432/catalog_db
      - DB_USERNAME=user
      - DB_PASSWORD=password
    ports:
      - "8081:8081"
      - "9081:9081" #actuator port
    restart: unless-stopped
    depends_on:
      book-postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - app-network

networks:
  app-network:
    driver: bridge