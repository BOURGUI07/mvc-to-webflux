openapi: 3.0.0
info:
  title: Product API
  description: API documentation for managing products in the catalog.
  version: 1.0.0
paths:
  /products:
    get:
      summary: Get all products with pagination
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: A list of products with pagination details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductResponse'
                  totalElements:
                    type: integer
                  pageNumber:
                    type: integer
                  totalPages:
                    type: integer
                  isFirst:
                    type: boolean
                  isLast:
                    type: boolean
                  hasNext:
                    type: boolean
                  hasPrevious:
                    type: boolean
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreationRequest'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'

  /products/{code}:
    get:
      summary: Get a product by its code
      parameters:
        - name: code
          in: path
          description: Code of the product to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '404':
          description: Product not found

    put:
      summary: Update a product by its code
      parameters:
        - name: code
          in: path
          description: Code of the product to update
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdateRequest'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'

    delete:
      summary: Delete a product by its code
      parameters:
        - name: code
          in: path
          description: Code of the product to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product deleted successfully
        '404':
          description: Product not found

  /products/stream/{maxPrice}:
    get:
      summary: Stream products that are below the given maximum price
      parameters:
        - name: maxPrice
          in: path
          description: Maximum price for filtering products
          required: true
          schema:
            type: number
            format: float
      responses:
        '200':
          description: Stream of products below the maximum price
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponse'

components:
  schemas:
    ProductResponse:
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
        name:
          type: string
        description:
          type: string
        imageUrl:
          type: string
        price:
          type: number
          format: float
        availableQuantity:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ProductCreationRequest:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        description:
          type: string
        imageUrl:
          type: string
        price:
          type: number
          format: float
        quantity:
          type: integer

    ProductUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        imageUrl:
          type: string
        price:
          type: number
          format: float
        quantity:
          type: integer

    PagedResult:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponse'
        totalElements:
          type: integer
        pageNumber:
          type: integer
        totalPages:
          type: integer
        isFirst:
          type: boolean
        isLast:
          type: boolean
        hasNext:
          type: boolean
        hasPrevious:
          type: boolean
